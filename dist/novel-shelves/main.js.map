{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.less","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/common/globals.service.ts","webpack:///./src/app/core/http/error.interceptor.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./container/container.module\": [\n\t\t\"./src/app/container/container.module.ts\",\n\t\t\"container-container-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar module = __webpack_require__(ids[0]);\n\t\treturn module;\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  { path: '',\n    loadChildren: './container/container.module#ContainerModule'\n  }\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes, {useHash: true}) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule {}\n","module.exports = \"<nz-spin [ngClass]=\\\"{'loading': globals.loading, 'hidden': !globals.loading}\\\"></nz-spin>\\n<router-outlet></router-outlet>\\n\"","module.exports = \":host /deep/ .ant-spin-spinning {\\n  width: 3rem;\\n  height: 3rem;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  background: rgba(224, 224, 224, 0.8);\\n  color: #666666;\\n  border-radius: 5px;\\n}\\n:host /deep/ .loading {\\n  left: 0;\\n  top: 0;\\n  position: fixed;\\n  z-index: 999;\\n  bottom: 0;\\n  right: 0;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  background: transparent;\\n}\\n:host /deep/ .loading .ant-spin-spinning {\\n  display: '';\\n}\\n:host /deep/ .hidden {\\n  display: none;\\n}\\n\"","import { Component, ChangeDetectorRef, AfterViewChecked } from '@angular/core';\nimport { GlobalsService } from './common/globals.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.less']\n})\nexport class AppComponent implements AfterViewChecked {\n  constructor(private changeRef: ChangeDetectorRef, private globals: GlobalsService) { }\n\n  ngAfterViewChecked() {\n    this.changeRef.detectChanges();\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { NgZorroAntdModule, NZ_I18N, zh_CN } from 'ng-zorro-antd';\nimport { registerLocaleData } from '@angular/common';\nimport zh from '@angular/common/locales/zh';\nimport { AppRoutingModule } from './app-routing.module';\nimport { ErrorInterceptor } from './core/http/error.interceptor';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\n\nregisterLocaleData(zh);\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    AppRoutingModule,\n    NgZorroAntdModule,\n    ServiceWorkerModule.register('/ngsw-worker.js', { enabled: environment.production })\n  ],\n  providers: [\n    { provide: NZ_I18N, useValue: zh_CN },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true},\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GlobalsService {\n  loading = false;\n}\n","/*\n * @Author: qiuz\n * @Github: <https://github.com/qiuziz>\n * @Date: 2018-09-22 21:11:55\n * @Last Modified by: qiuz\n * @Last Modified time: 2018-09-22 22:14:19\n */\n\nimport { Injectable, Injector } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n  HttpInterceptor,\n  HttpRequest,\n  HttpHandler,\n  HttpErrorResponse,\n  HttpSentEvent,\n  HttpHeaderResponse,\n  HttpProgressEvent,\n  HttpResponse,\n  HttpUserEvent,\n} from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport { mergeMap, catchError } from 'rxjs/operators';\nimport { GlobalsService } from '../../common/globals.service';\n\n/**\n * 默认HTTP拦截器，其注册细节见 `app.module.ts`\n */\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n  constructor(\n    private injector: Injector,\n    private globals: GlobalsService\n  ) {}\n\n  private handleData(\n    event: HttpResponse<any> | HttpErrorResponse,\n  ): Observable<any> {\n    // 业务处理：一些通用操作\n    console.log(event.status);\n    switch (event.status) {\n      case 200:\n        break;\n      case 401: // 未登录状态码\n      case 403:\n      case 404:\n      case 500:\n        this.globals.loading = false;\n        break;\n      default:\n        if (event instanceof HttpErrorResponse) {\n          console.warn(\n            '未可知错误，大部分是由于后端不支持CORS或无效配置引起',\n            event,\n          );\n          this.globals.loading = false;\n        }\n        break;\n    }\n    return of(event);\n  }\n\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler,\n  ): Observable<\n    | HttpSentEvent\n    | HttpHeaderResponse\n    | HttpProgressEvent\n    | HttpResponse<any>\n    | HttpUserEvent<any>\n  > {\n\n    return next.handle(req).pipe(\n      mergeMap((event: any) => {\n        // 允许统一对请求错误处理，这是因为一个请求若是业务上错误的情况下其HTTP请求的状态是200的情况下需要\n        if (event instanceof HttpResponse && event.status === 200) {\n          return this.handleData(event);\n        }\n        // 若一切都正常，则后续操作\n        return of(event);\n      }),\n      catchError((err: HttpErrorResponse) => this.handleData(err)),\n    );\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport 'hammerjs';\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}